import{_ as e,c as a,o as r,V as t}from"./chunks/framework.LM2Gdl7S.js";const f=JSON.parse('{"title":"What is Melange","description":"","frontmatter":{},"headers":[],"relativePath":"what-is-melange.md","filePath":"what-is-melange.md"}'),o={name:"what-is-melange.md"},l=t('<h1 id="what-is-melange" tabindex="-1">What is Melange <a class="header-anchor" href="#what-is-melange" aria-label="Permalink to &quot;What is Melange&quot;">â€‹</a></h1><p>Melange is a set of tools that come together to generate and interoperate with modern JavaScript:</p><ul><li><p>The <a href="https://github.com/melange-re/melange-compiler-libs" target="_blank" rel="noreferrer">compiler libraries</a>: These libraries are a fork of the <a href="https://v2.ocaml.org/api/compilerlibref/Compiler_libs.html" target="_blank" rel="noreferrer">OCaml compiler libraries</a> with adaptations for generating lean JavaScript code, as opposed to bytecode or assembly.</p></li><li><p>The compiler (<code>melc</code>): This executable takes OCaml code as input and is responsible for generating JavaScript. It relies on the Melange compiler libraries.</p></li><li><p>The <a href="https://github.com/melange-re/melange/tree/c5bf086511ed4830018e67ca63df86045dbe356d/jscomp/runtime" target="_blank" rel="noreferrer">runtime</a>: This is a small code component essential for running JavaScript programs produced by the compiler.</p></li><li><p>The <a href="./api.html">standard libraries</a>: Melange includes a set of foundational elements such as data structures, functions, and bindings to JavaScript APIs, all aimed at helping developers accelerate app development.</p></li><li><p>The preprocessor (<code>melange.ppx</code>): This is a <a href="https://ocaml.org/docs/metaprogramming" target="_blank" rel="noreferrer">meta-programming</a> tool designed to preprocess Melange programs, simplifying code generation for common use cases like generating bindings or code from types.</p></li><li><p>The <a href="./playground/" target="_self">playground</a>: This is a browser-based version of the compiler, enabling users to experiment with and share Melange code snippets and small programs.</p></li></ul><p>In addition to these core components, there is an ongoing effort to integrate Melange into the broader OCaml Platform and other tools and libraries within the OCaml ecosystem:</p><ul><li><p>A <a href="./build-system.html">build system</a>: <a href="https://dune.readthedocs.io" target="_blank" rel="noreferrer">Dune</a>, a prominent OCaml build system, provides seamless support for Melange.</p></li><li><p>A <a href="./package-management.html">package manager</a>: Melange seamlessly integrates with <a href="https://opam.ocaml.org/" target="_blank" rel="noreferrer">opam</a>, OCaml&#39;s default package manager.</p></li><li><p>A package repository: Melange libraries and tools are published in the <a href="https://opam.ocaml.org/packages/" target="_blank" rel="noreferrer">main public package repository</a> for opam.</p></li><li><p>Syntaxes: Melange empowers users to optionally write their applications using the <a href="https://reasonml.github.io/" target="_blank" rel="noreferrer">Reason syntax</a>, with full support for React applications through the Melange bindings library <a href="https://reasonml.github.io/reason-react/" target="_blank" rel="noreferrer">ReasonReact</a>.</p></li><li><p>Editor integration: Melange is fully compatible with the <a href="https://ocaml.org/docs/set-up-editor" target="_blank" rel="noreferrer">OCaml editor tools</a>, and also with code formatters like <a href="https://github.com/ocaml-ppx/ocamlformat" target="_blank" rel="noreferrer">ocamlformat</a> and <a href="https://github.com/reasonml/reason/tree/d47e613b736cc25629aabc1c8ef91795e265eacb/src/refmt" target="_blank" rel="noreferrer">refmt</a>.</p></li></ul>',5),i=[l];function n(s,p,m,c,h,g){return r(),a("div",null,i)}const b=e(o,[["render",n]]);export{f as __pageData,b as default};
