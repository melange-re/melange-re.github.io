import{_ as e,c as a,o as t,k as r}from"./chunks/framework.esbpoalq.js";const u=JSON.parse('{"title":"Introducing Melange 2.0","description":"","frontmatter":{"title":"Introducing Melange 2.0","date":"2023-09-20T00:00:00.000Z","author":"Antonio Monteiro","gravatar":"45c2052f50f561b9dc2cae59c777aecd794f57269fa317f9c9c3365c2e00d16f","twitter":"@_anmonteiro","head":[["link",{"rel":"canonical","href":"https://anmonteiro.substack.com/p/introducing-melange-20"}]]},"headers":[],"relativePath":"posts/introducing-melange-20.md","filePath":"posts/introducing-melange-20.md"}'),o={name:"posts/introducing-melange-20.md"},n=r('<p>Today, the Melange team is excited to introduce Melange 2.0. This iteration brings an upgrade to the OCaml 5.1 type checker, along with increased compatibility with the OCaml Platform. Melange 2.0 unifies the compiler attributes and libraries under the Melange brand and it improves developer experience across the ecosystem. We&#39;re also publishing a few battle-tested libraries to <a href="https://github.com/ocaml/opam-repository" target="_blank" rel="noreferrer">OPAM</a>.</p><hr><p>Everything we have included in this release has been designed to enhance your experience writing Reason / OCaml for modern JS workflows. Here&#39;s a comprehensive look at what&#39;s new.</p><h2 id="what-s-new-in-melange-2-0" tabindex="-1"><strong>What&#39;s New in Melange 2.0?</strong> <a class="header-anchor" href="#what-s-new-in-melange-2-0" aria-label="Permalink to &quot;**What&#39;s New in Melange 2.0?**&quot;">​</a></h2><h3 id="ocaml-5" tabindex="-1">OCaml 5 <a class="header-anchor" href="#ocaml-5" aria-label="Permalink to &quot;OCaml 5&quot;">​</a></h3><p><a href="https://discuss.ocaml.org/t/ocaml-5-1-0-released/13021" target="_blank" rel="noreferrer">OCaml 5.1</a> has just been released. Melange 2.0 has been upgraded to use the newly released OCaml 5.1 type checker and compiler libs. As the OCaml community starts to upgrade to the newest version of OCaml, Melange will be co-installable in your OPAM switch.</p><p>While the Melange type checker has been upgraded to the 5.x release line, Melange doesn&#39;t yet include support for <a href="https://v2.ocaml.org/manual/effects.html" target="_blank" rel="noreferrer">effect handlers</a> and some of the multicore OCaml primitives. Stay tuned for future updates on this.</p><h3 id="the-reign-of-melange-ppx" tabindex="-1">The reign of <code>melange.ppx</code> <a class="header-anchor" href="#the-reign-of-melange-ppx" aria-label="Permalink to &quot;The reign of `melange.ppx`&quot;">​</a></h3><p>The compiler frontend transformations related to the <a href="https://en.wikipedia.org/wiki/Foreign_function_interface" target="_blank" rel="noreferrer">FFI</a>, <a href="https://melange.re/v2.0.0/communicate-with-javascript/#list-of-attributes-and-extension-nodes" target="_blank" rel="noreferrer">extensions</a> and <a href="https://melange.re/v2.0.0/communicate-with-javascript/#generate-getters-setters-and-constructors" target="_blank" rel="noreferrer">derivers</a> have been fully extracted from the compiler to the Melange PPX. Going forward, it&#39;s likely you&#39;ll need to preprocess most Melange code with <code>melange.ppx</code>.</p><h3 id="wrapping-the-melange-core-libraries" tabindex="-1">Wrapping the Melange Core Libraries <a class="header-anchor" href="#wrapping-the-melange-core-libraries" aria-label="Permalink to &quot;Wrapping the Melange Core Libraries&quot;">​</a></h3><p>In this release, we wrapped the Melange runtime and core libraries. Each library exposes only a single top-level module, avoiding namespace pollution. The only modules exposed by Melange are now:</p><ul><li><p>The <code>Js</code> module contains utilities to interact with JavaScript standard APIs. Modules such as <code>Js_string</code> now only accessible via <code>Js.String</code>.</p></li><li><p>The <code>Belt</code> library contains utilities inherited from BuckleScript. Its sub-modules similarly nested under <code>Belt</code>, e.g. you&#39;ll use <code>Belt.List</code> instead of <code>Belt_List</code>.</p></li><li><p>Melange 2.0 exposes only a single <code>Stdlib</code> module, where previously it was leaking e.g. <code>Stdlib__String</code>, etc.</p></li><li><p><strong>New libraries</strong>: The <code>Node</code> module has been extracted to a new <code>melange.node</code> library. Similarly, <code>Dom</code> is now only accessible via the <code>melange.dom</code> library. Both libraries are released with the Melange distribution, but not included by default; they can be added to the Dune <code>(libraries ...)</code> field.</p></li></ul><h3 id="enforcing-the-melange-brand" tabindex="-1">Enforcing the Melange brand <a class="header-anchor" href="#enforcing-the-melange-brand" aria-label="Permalink to &quot;Enforcing the Melange brand&quot;">​</a></h3><p><code>bs.*</code> <a href="https://melange.re/v2.0.0/communicate-with-javascript/#attributes" target="_blank" rel="noreferrer">attributes</a> have been deprecated in this release in favor of <code>mel.*</code>. The <a href="https://melange.re/v2.0.0/communicate-with-javascript/#binding-to-callbacks" target="_blank" rel="noreferrer">uncurried</a> <code>[@bs]</code> attribute is now simply <code>[@u]</code>. The next major Melange release will be removing them entirely. <code>%bs.*</code> <a href="https://melange.re/v2.0.0/communicate-with-javascript/#extension-nodes" target="_blank" rel="noreferrer">extension nodes</a> have, however, been replaced with <code>%mel.* </code>due to limitations in <a href="https://github.com/ocaml-ppx/ppxlib" target="_blank" rel="noreferrer">ppxlib</a>. This is a breaking change.</p><h3 id="development-experience" tabindex="-1">Development experience <a class="header-anchor" href="#development-experience" aria-label="Permalink to &quot;Development experience&quot;">​</a></h3><p>We&#39;ve done significant work making Melange easier to use in this release:</p><ol><li><p>Attributes like <code>[@{bs,mel}.val]</code> have been deprecated as they&#39;re redundant in the Melange FFI.</p></li><li><p>We&#39;re introducing more ways of using <code>@mel.as</code> in:</p><ol><li><p><code>let</code><a href="https://github.com/melange-re/melange/pull/714" target="_blank" rel="noreferrer"> bindings</a> to allow exporting otherwise invalid OCaml identifiers;</p></li><li><p><code>external</code><a href="https://github.com/melange-re/melange/pull/722" target="_blank" rel="noreferrer"> polymorphic variants</a> without needing to use <code>[@mel.{string,int}]</code>;</p></li><li><p><a href="https://github.com/melange-re/melange/pull/732" target="_blank" rel="noreferrer">inline records</a> in both regular and extensible variants and custom exceptions.</p></li></ol></li></ol><h3 id="ecosystem" tabindex="-1">Ecosystem <a class="header-anchor" href="#ecosystem" aria-label="Permalink to &quot;Ecosystem&quot;">​</a></h3><ul><li><p>With this release, we&#39;re starting to publish some widely used libraries from the <code>melange-community</code> and <code>ahrefs</code> organizations. Be on the lookout for new Melange-ready releases popping up in the <a href="https://github.com/ocaml/opam-repository" target="_blank" rel="noreferrer">OPAM repository</a> in the next few days. <a href="https://github.com/ocaml/opam-repository/pull/24396" target="_blank" rel="noreferrer">Reason 3.10</a> is also a companion release to Melange 2.0.</p></li><li><p>The new <code>reason-react</code> releases greatly increase developer experience by <a href="https://github.com/reasonml/reason-react/pull/748" target="_blank" rel="noreferrer">improving the editor integration</a>. React props and children now point to the correct source code locations, making React components much easier to track in your editor.</p></li><li><p>We&#39;ve also released an OPAM plugin, <a href="https://github.com/jchavarri/opam-check-npm-deps/" target="_blank" rel="noreferrer">check-npm-deps</a>. This tool checks whether the NPM dependencies in your <code>node_modules</code> folder match what libraries released to OPAM need. <code>check-npm-deps</code> is currently in preview and we&#39;re looking for your feedback on how we can evolve it.</p></li></ul><h2 id="support-sponsorship" tabindex="-1"><strong>Support &amp; Sponsorship</strong> <a class="header-anchor" href="#support-sponsorship" aria-label="Permalink to &quot;**Support &amp; Sponsorship**&quot;">​</a></h2><p>This release was made possible with the continued support of:</p><ul><li><p><a href="https://ahrefs.com/?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">Ahrefs</a>, who have been supporting Melange development since October 2022, having fully <a href="https://tech.ahrefs.com/ahrefs-is-now-built-with-melange-b14f5ec56df4?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">migrated their codebase to Melange</a> and making the work towards <a href="https://anmonteiro.substack.com/p/melange-10-is-here" target="_blank" rel="noreferrer">Melange 1.0</a> possible.</p></li><li><p>The <a href="https://ocaml-sf.org/?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">OCaml Software Foundation</a>, who has previously <a href="https://twitter.com/_anmonteiro/status/1589044352479035393?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">committed funding</a> for the Melange project in October 2022, and renewed it for another half-year ending in August 2023.</p></li><li><p><a href="https://github.com/sponsors/anmonteiro/?utm_source=anmonteiro&amp;utm_medium=email&amp;utm_campaign=melange-hits-v10" target="_blank" rel="noreferrer">My (Antonio) sponsors</a> on GitHub, both past and present.</p></li></ul><h3 id="parting-thoughts" tabindex="-1">Parting thoughts <a class="header-anchor" href="#parting-thoughts" aria-label="Permalink to &quot;Parting thoughts&quot;">​</a></h3><p>The goal of Melange is to provide a robust and evolving toolchain that matches the dynamic nature of modern JS development. Melange 2.0 is a testament to that commitment. In this release, we&#39;ve shipped the majority of our <a href="https://docs.google.com/document/d/1UhanM28sOAmS3NI4q4BJBeoCX0SdBMqUIq0rofdpOfU" target="_blank" rel="noreferrer">Q3 roadmap</a>. Dive in, explore the new features, and let us know your feedback.</p><p>Consult the <a href="https://github.com/melange-re/melange/blob/main/Changes.md#200-2023-09-13" target="_blank" rel="noreferrer">full change log</a> and the <a href="https://melange.re/v2.0.0/how-to-guides/#to-v2-from-v1" target="_blank" rel="noreferrer">migration guide from 1.0</a> for a more detailed look at all the changes that went into this packed release.</p><p>If you or your company are interested in seeing what Melange can do for your JavaScript needs, feel free to get in touch. We&#39;d love to hear from you.</p><p>Happy hacking!</p><p>Antonio &amp; the Melange team</p>',28),i=[n];function l(s,c,h,d,p,m){return t(),a("div",null,i)}const f=e(o,[["render",l]]);export{u as __pageData,f as default};
