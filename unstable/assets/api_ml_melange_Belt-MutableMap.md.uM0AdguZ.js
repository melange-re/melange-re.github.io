import{_ as a,c as s,o as e,V as t}from"./chunks/framework.BCxdY_ip.js";const r=JSON.parse('{"title":"Module Belt.MutableMap","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Belt-MutableMap.md","filePath":"api/ml/melange/Belt-MutableMap.md"}'),p={name:"api/ml/melange/Belt-MutableMap.md"},n=t(`<h1 id="module-belt-mutablemap" tabindex="-1">Module <code>Belt.MutableMap</code> <a class="header-anchor" href="#module-belt-mutablemap" aria-label="Permalink to &quot;Module \`Belt.MutableMap\`&quot;">â€‹</a></h1><p><a href="#"><code>Belt.MutableMap</code></a></p><p>The top level provides generic <strong>mutable</strong> map operations.</p><p>It also has two specialized inner modules <a href="./Belt-MutableMap-Int.html"><code>Belt.MutableMap.Int</code></a> and <a href="./Belt-MutableMap-String.html"><code>Belt.MutableMap.String</code></a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Int : sig ... end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module String : sig ... end</span></span></code></pre></div><p>A <strong>mutable</strong> sorted map module which allows customize <em>compare</em> behavior.</p><p>Same as Belt.Map, but mutable.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;k, &#39;v, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;key, &#39;id) id =</span></span>
<span class="line"><span>  (module Belt__.Belt_Id.Comparable</span></span>
<span class="line"><span>  with type identity = &#39;id</span></span>
<span class="line"><span>   and type t = &#39;key)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val make : id:(&#39;k, &#39;id) id -&gt; (&#39;k, &#39;a, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val clear : (_, _, _) t -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val isEmpty : (_, _, _) t -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val has : (&#39;k, _, _) t -&gt; &#39;k -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val cmpU : </span></span>
<span class="line"><span>  (&#39;k, &#39;a, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;k, &#39;a, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;a -&gt; &#39;a -&gt; int) Js.Fn.arity2 -&gt;</span></span>
<span class="line"><span>  int</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val cmp : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;a -&gt; &#39;a -&gt; int) -&gt; int</span></span></code></pre></div><p><code>cmp m1 m2 cmp</code> First compare by size, if size is the same, compare by key, value pair</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val eqU : </span></span>
<span class="line"><span>  (&#39;k, &#39;a, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;k, &#39;a, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;a -&gt; &#39;a -&gt; bool) Js.Fn.arity2 -&gt;</span></span>
<span class="line"><span>  bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val eq : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;a -&gt; &#39;a -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>eq m1 m2 eqf</code> tests whether the maps <code>m1</code> and <code>m2</code> are equal, that is, contain equal keys and associate them with equal data. <code>eqf</code> is the equality predicate used to compare the data associated with the keys.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEachU : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k -&gt; &#39;a -&gt; unit) Js.Fn.arity2 -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEach : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k -&gt; &#39;a -&gt; unit) -&gt; unit</span></span></code></pre></div><p><code>forEach m f</code> applies <code>f</code> to all bindings in map <code>m</code>. <code>f</code> receives the &#39;k as first argument, and the associated value as second argument. The bindings are passed to <code>f</code> in increasing order with respect to the ordering over the type of the keys.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val reduceU : </span></span>
<span class="line"><span>  (&#39;k, &#39;a, &#39;id) t -&gt;</span></span>
<span class="line"><span>  &#39;b -&gt;</span></span>
<span class="line"><span>  (&#39;b -&gt; &#39;k -&gt; &#39;a -&gt; &#39;b) Js.Fn.arity3 -&gt;</span></span>
<span class="line"><span>  &#39;b</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val reduce : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;b -&gt; (&#39;b -&gt; &#39;k -&gt; &#39;a -&gt; &#39;b) -&gt; &#39;b</span></span></code></pre></div><p><code>reduce m a f</code> computes <code>(f kN dN ... (f k1 d1 a)...)</code>, where <code>k1 ... kN</code> are the keys of all bindings in <code>m</code> (in increasing order), and <code>d1 ... dN</code> are the associated data.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val everyU : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k -&gt; &#39;a -&gt; bool) Js.Fn.arity2 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val every : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k -&gt; &#39;a -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>every m p</code> checks if all the bindings of the map satisfy the predicate <code>p</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val someU : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k -&gt; &#39;a -&gt; bool) Js.Fn.arity2 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val some : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k -&gt; &#39;a -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>some m p</code> checks if at least one binding of the map satisfy the predicate <code>p</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val size : (&#39;k, &#39;a, &#39;id) t -&gt; int</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val toList : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k * &#39;a) list</span></span></code></pre></div><p>In increasing order</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val toArray : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k * &#39;a) array</span></span></code></pre></div><p>In increasing order</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val fromArray : (&#39;k * &#39;a) array -&gt; id:(&#39;k, &#39;id) id -&gt; (&#39;k, &#39;a, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val keysToArray : (&#39;k, _, _) t -&gt; &#39;k array</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val valuesToArray : (_, &#39;a, _) t -&gt; &#39;a array</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val minKey : (&#39;k, _, _) t -&gt; &#39;k option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val minKeyUndefined : (&#39;k, _, _) t -&gt; &#39;k Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val maxKey : (&#39;k, _, _) t -&gt; &#39;k option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val maxKeyUndefined : (&#39;k, _, _) t -&gt; &#39;k Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val minimum : (&#39;k, &#39;a, _) t -&gt; (&#39;k * &#39;a) option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val minUndefined : (&#39;k, &#39;a, _) t -&gt; (&#39;k * &#39;a) Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val maximum : (&#39;k, &#39;a, _) t -&gt; (&#39;k * &#39;a) option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val maxUndefined : (&#39;k, &#39;a, _) t -&gt; (&#39;k * &#39;a) Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val get : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;k -&gt; &#39;a option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val getUndefined : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;k -&gt; &#39;a Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val getWithDefault : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;k -&gt; &#39;a -&gt; &#39;a</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val getExn : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;k -&gt; &#39;a</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val checkInvariantInternal : (_, _, _) t -&gt; unit</span></span></code></pre></div><p><strong>raise</strong> when invariant is not held</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val remove : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;k -&gt; unit</span></span></code></pre></div><p><code>remove m x</code> do the in-place modification,</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val removeMany : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;k array -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val set : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;k -&gt; &#39;a -&gt; unit</span></span></code></pre></div><p><code>set m x y </code> do the in-place modification</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val updateU : </span></span>
<span class="line"><span>  (&#39;k, &#39;a, &#39;id) t -&gt;</span></span>
<span class="line"><span>  &#39;k -&gt;</span></span>
<span class="line"><span>  (&#39;a option -&gt; &#39;a option) Js.Fn.arity1 -&gt;</span></span>
<span class="line"><span>  unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val update : (&#39;k, &#39;a, &#39;id) t -&gt; &#39;k -&gt; (&#39;a option -&gt; &#39;a option) -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val mergeMany : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k * &#39;a) array -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val mapU : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;a -&gt; &#39;b) Js.Fn.arity1 -&gt; (&#39;k, &#39;b, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val map : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;a -&gt; &#39;b) -&gt; (&#39;k, &#39;b, &#39;id) t</span></span></code></pre></div><p><code>map m f</code> returns a map with same domain as <code>m</code>, where the associated value <code>a</code> of all bindings of <code>m</code> has been replaced by the result of the application of <code>f</code> to <code>a</code>. The bindings are passed to <code>f</code> in increasing order with respect to the ordering over the type of the keys.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val mapWithKeyU : </span></span>
<span class="line"><span>  (&#39;k, &#39;a, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;k -&gt; &#39;a -&gt; &#39;b) Js.Fn.arity2 -&gt;</span></span>
<span class="line"><span>  (&#39;k, &#39;b, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val mapWithKey : (&#39;k, &#39;a, &#39;id) t -&gt; (&#39;k -&gt; &#39;a -&gt; &#39;b) -&gt; (&#39;k, &#39;b, &#39;id) t</span></span></code></pre></div>`,67),i=[n];function l(o,d,c,g,h,u){return e(),s("div",null,i)}const b=a(p,[["render",l]]);export{r as __pageData,b as default};
