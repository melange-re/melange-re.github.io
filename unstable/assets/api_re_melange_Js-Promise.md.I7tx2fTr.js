import{_ as a,c as s,o as e,V as t}from"./chunks/framework.BCxdY_ip.js";const v=JSON.parse('{"title":"Module Js.Promise","description":"","frontmatter":{},"headers":[],"relativePath":"api/re/melange/Js-Promise.md","filePath":"api/re/melange/Js-Promise.md"}'),n={name:"api/re/melange/Js-Promise.md"},p=t(`<h1 id="module-js-promise" tabindex="-1">Module <code>Js.Promise</code> <a class="header-anchor" href="#module-js-promise" aria-label="Permalink to &quot;Module \`Js.Promise\`&quot;">â€‹</a></h1><p>Bindings to JS <code>Promise</code> functions</p><p>Specialized bindings to Promise. Note: For simplicity, this binding does not track the error type, it treat it as an opaque type</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type t(+&#39;a) = Js.promise(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type error;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let make: </span></span>
<span class="line"><span>  (resolve:Js.Fn.arity1((&#39;a =&gt; unit)) =&gt;</span></span>
<span class="line"><span>    reject:Js.Fn.arity1((exn =&gt; unit)) =&gt;</span></span>
<span class="line"><span>    unit) =&gt;</span></span>
<span class="line"><span>  t(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let resolve: &#39;a =&gt; t(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let reject: exn =&gt; t(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let all: array(t(&#39;a)) =&gt; t(array(&#39;a));</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let all2: (t(&#39;a0), t(&#39;a1)) =&gt; t((&#39;a0, &#39;a1));</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let all3: (t(&#39;a0), t(&#39;a1), t(&#39;a2)) =&gt; t((&#39;a0, &#39;a1, &#39;a2));</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let all4: (t(&#39;a0), t(&#39;a1), t(&#39;a2), t(&#39;a3)) =&gt; t((&#39;a0, &#39;a1, &#39;a2, &#39;a3));</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let all5: </span></span>
<span class="line"><span>  (t(&#39;a0), t(&#39;a1), t(&#39;a2), t(&#39;a3), t(&#39;a4)) =&gt;</span></span>
<span class="line"><span>  t((&#39;a0, &#39;a1, &#39;a2, &#39;a3, &#39;a4));</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let all6: </span></span>
<span class="line"><span>  (t(&#39;a0), t(&#39;a1), t(&#39;a2), t(&#39;a3), t(&#39;a4), t(&#39;a5)) =&gt;</span></span>
<span class="line"><span>  t((&#39;a0, &#39;a1, &#39;a2, &#39;a3, &#39;a4, &#39;a5));</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let race: array(t(&#39;a)) =&gt; t(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let then_: (&#39;a =&gt; t(&#39;b)) =&gt; t(&#39;a) =&gt; t(&#39;b);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let catch: (error =&gt; t(&#39;a)) =&gt; t(&#39;a) =&gt; t(&#39;a);</span></span></code></pre></div>`,17),i=[p];function l(o,c,d,h,g,r){return e(),s("div",null,i)}const b=a(n,[["render",l]]);export{v as __pageData,b as default};
