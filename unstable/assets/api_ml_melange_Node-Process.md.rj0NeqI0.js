import{_ as s,c as a,o as e,V as n}from"./chunks/framework.BCxdY_ip.js";const v=JSON.parse('{"title":"Module Node.Process","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Node-Process.md","filePath":"api/ml/melange/Node-Process.md"}'),t={name:"api/ml/melange/Node-Process.md"},p=n(`<h1 id="module-node-process" tabindex="-1">Module <code>Node.Process</code> <a class="header-anchor" href="#module-node-process" aria-label="Permalink to &quot;Module \`Node.Process\`&quot;">â€‹</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type t =</span></span>
<span class="line"><span>  &lt; argv : string array</span></span>
<span class="line"><span>    ; arch : string</span></span>
<span class="line"><span>    ; abort : unit Js.OO.Meth.arity0</span></span>
<span class="line"><span>    ; chdir : (string -&gt; unit) Js.OO.Meth.arity1</span></span>
<span class="line"><span>    ; cwd : string Js.OO.Meth.arity0</span></span>
<span class="line"><span>    ; disconnect : unit Js.OO.Meth.arity0</span></span>
<span class="line"><span>    ; platform : string</span></span>
<span class="line"><span>    ; env : string Js.Dict.t &gt;</span></span>
<span class="line"><span>    Js.t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val process : t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val argv : string array</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val exit : int -&gt; &#39;a</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val cwd : unit -&gt; string</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val uptime : t -&gt; unit -&gt; float</span></span></code></pre></div><p>The process.uptime() method returns the number of seconds the current Node.js process has been running.)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val putEnvVar : string -&gt; string -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val deleteEnvVar : string -&gt; unit</span></span></code></pre></div>`,10),i=[p];function l(o,c,d,r,h,g){return e(),a("div",null,i)}const m=s(t,[["render",l]]);export{v as __pageData,m as default};
