import{_ as s,c as a,o as e,V as i}from"./chunks/framework.BCxdY_ip.js";const k=JSON.parse('{"title":"Module Belt.Id","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Belt-Id.md","filePath":"api/ml/melange/Belt-Id.md"}'),t={name:"api/ml/melange/Belt-Id.md"},n=i(`<h1 id="module-belt-id" tabindex="-1">Module <code>Belt.Id</code> <a class="header-anchor" href="#module-belt-id" aria-label="Permalink to &quot;Module \`Belt.Id\`&quot;">â€‹</a></h1><p><a href="#"><code>Belt.Id</code></a></p><p>Provide utilities to create identified comparators or hashes for data structures used below.</p><p>It create a unique identifier per module of functions so that different data structures with slightly different comparison functions won&#39;t mix</p><p><a href="#"><code>Belt.Id</code></a></p><p>Provide utiliites to create identified comparators or hashes for data structures used below.</p><p>It create a unique identifer per module of functions so that different data structures with slightly different comparison functions won&#39;t mix.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;a, &#39;id) hash</span></span></code></pre></div><p><code>(&#39;a, &#39;id) hash</code></p><p>Its runtime represenation is a <code>hash</code> function, but signed with a type parameter, so that different hash functions type mismatch</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;a, &#39;id) eq</span></span></code></pre></div><p><code>(&#39;a, &#39;id) eq</code></p><p>Its runtime represenation is an <code>eq</code> function, but signed with a type parameter, so that different hash functions type mismatch</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;a, &#39;id) cmp</span></span></code></pre></div><p><code>(&#39;a,&#39;id) cmp</code></p><p>Its runtime representation is a <code>cmp</code> function, but signed with a type parameter, so that different hash functions type mismatch</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module type Comparable = sig ... end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;key, &#39;id) comparable =</span></span>
<span class="line"><span>  (module Comparable</span></span>
<span class="line"><span>  with type identity = &#39;id</span></span>
<span class="line"><span>   and type t = &#39;key)</span></span></code></pre></div><p><code>(&#39;key, &#39;id) cmparable</code> is a module of functions, here it only includes <code>cmp</code>.</p><p>Unlike normal functions, when created, it comes with a unique identity (guaranteed by the type system).</p><p>It can be created using function <a href="./#val-comparableU"><code>comparableU</code></a> or <a href="./#val-comparable"><code>comparable</code></a>.</p><p>The idea of a unique identity when created is that it makes sure two sets would type mismatch if they use different comparison function</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module MakeComparableU (M : sig ... end) : Comparable with type t = M.t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module MakeComparable (M : sig ... end) : Comparable with type t = M.t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val comparableU : </span></span>
<span class="line"><span>  cmp:(&#39;a -&gt; &#39;a -&gt; int) Js.Fn.arity2 -&gt;</span></span>
<span class="line"><span>  (module Comparable</span></span>
<span class="line"><span>  with type t = &#39;a)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val comparable : cmp:(&#39;a -&gt; &#39;a -&gt; int) -&gt; (module Comparable with type t = &#39;a)</span></span></code></pre></div><div class="language-ocaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ocaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Belt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">comparable ~cmp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(compare </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Belt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">make(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> C</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Note that the name of C can not be ignored</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module type Hashable = sig ... end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;key, &#39;id) hashable =</span></span>
<span class="line"><span>  (module Hashable</span></span>
<span class="line"><span>  with type identity = &#39;id</span></span>
<span class="line"><span>   and type t = &#39;key)</span></span></code></pre></div><p><code>(&#39;key, &#39;id) hashable</code> is a module of functions, here it only includes <code>hash</code>, <code>eq</code>.</p><p>Unlike normal functions, when created, it comes with a unique identity (guaranteed by the type system).</p><p>It can be created using function <a href="./#val-hashableU"><code>hashableU</code></a> or <a href="./#val-hashable"><code>hashable</code></a>.</p><p>The idea of a unique identity when created is that it makes sure two hash sets would type mismatch if they use different comparison function</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module MakeHashableU (M : sig ... end) : Hashable with type t = M.t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module MakeHashable (M : sig ... end) : Hashable with type t = M.t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val hashableU : </span></span>
<span class="line"><span>  hash:(&#39;a -&gt; int) Js.Fn.arity1 -&gt;</span></span>
<span class="line"><span>  eq:(&#39;a -&gt; &#39;a -&gt; bool) Js.Fn.arity2 -&gt;</span></span>
<span class="line"><span>  (module Hashable</span></span>
<span class="line"><span>  with type t = &#39;a)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val hashable : </span></span>
<span class="line"><span>  hash:(&#39;a -&gt; int) -&gt;</span></span>
<span class="line"><span>  eq:(&#39;a -&gt; &#39;a -&gt; bool) -&gt;</span></span>
<span class="line"><span>  (module Hashable</span></span>
<span class="line"><span>  with type t = &#39;a)</span></span></code></pre></div>`,38),p=[n];function l(h,d,o,c,r,u){return e(),a("div",null,p)}const m=s(t,[["render",l]]);export{k as __pageData,m as default};
