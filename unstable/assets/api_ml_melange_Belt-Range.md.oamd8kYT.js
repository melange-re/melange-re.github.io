import{_ as t,c as e,o as a,V as s}from"./chunks/framework.BCxdY_ip.js";const u=JSON.parse('{"title":"Module Belt.Range","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Belt-Range.md","filePath":"api/ml/melange/Belt-Range.md"}'),n={name:"api/ml/melange/Belt-Range.md"},i=s('<h1 id="module-belt-range" tabindex="-1">Module <code>Belt.Range</code> <a class="header-anchor" href="#module-belt-range" aria-label="Permalink to &quot;Module `Belt.Range`&quot;">â€‹</a></h1><p><a href="#"><code>Belt.Range</code></a></p><p>Utilities for a closed range <code>(from, start)</code></p><p>A small module to provide a inclusive range operations <code>[start, finsish]</code>, it use a for-loop internally instead of creating an array</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEachU : int -&gt; int -&gt; (int -&gt; unit) Js.Fn.arity1 -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEach : int -&gt; int -&gt; (int -&gt; unit) -&gt; unit</span></span></code></pre></div><p><code>forEach start finish action</code></p><p>equivalent to <code>Belt.Array.(forEach (range start finish) action)</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val everyU : int -&gt; int -&gt; (int -&gt; bool) Js.Fn.arity1 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val every : int -&gt; int -&gt; (int -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>every start finish p</code></p><p>equivalent to <code>Belt.Array.(every (range start finish) p )</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val everyByU : int -&gt; int -&gt; step:int -&gt; (int -&gt; bool) Js.Fn.arity1 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val everyBy : int -&gt; int -&gt; step:int -&gt; (int -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>everyBy start finish ~step p</code></p><p><strong>See</strong> <a href="./Belt-Array.html#val-rangeBy"><code>Belt.Array.rangeBy</code></a></p><p>equivalent to <code>Belt.Array.(every (rangeBy start finish ~step) p)</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val someU : int -&gt; int -&gt; (int -&gt; bool) Js.Fn.arity1 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val some : int -&gt; int -&gt; (int -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>some start finish p</code></p><p>equivalent to <code>Belt.Array.(some (range start finish) p)</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val someByU : int -&gt; int -&gt; step:int -&gt; (int -&gt; bool) Js.Fn.arity1 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val someBy : int -&gt; int -&gt; step:int -&gt; (int -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>someBy start finish ~step p</code></p><p><strong>See</strong> <a href="./Belt-Array.html#val-rangeBy"><code>Belt.Array.rangeBy</code></a></p><p>equivalent to <code>Belt.Array.(some (rangeBy start finish ~step) p)</code></p>',26),o=[i];function p(l,c,d,g,r,h){return a(),e("div",null,o)}const b=t(n,[["render",p]]);export{u as __pageData,b as default};
