import{_ as a,c as s,o as e,V as t}from"./chunks/framework.BCxdY_ip.js";const v=JSON.parse('{"title":"Module Js.Set","description":"","frontmatter":{},"headers":[],"relativePath":"api/re/melange/Js-Set.md","filePath":"api/re/melange/Js-Set.md"}'),i={name:"api/re/melange/Js-Set.md"},p=t('<h1 id="module-js-set" tabindex="-1">Module <code>Js.Set</code> <a class="header-anchor" href="#module-js-set" aria-label="Permalink to &quot;Module `Js.Set`&quot;">â€‹</a></h1><p>Bindings to functions in <code>Set</code></p><p>ES6 Set API</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type t(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let make: unit =&gt; t(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let fromArray: array(&#39;a) =&gt; t(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let toArray: t(&#39;a) =&gt; array(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let size: t(&#39;a) =&gt; int;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let add: value:&#39;a =&gt; t(&#39;a) =&gt; t(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let clear: t(&#39;a) =&gt; unit;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let delete: value:&#39;a =&gt; t(&#39;a) =&gt; bool;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let forEach: f:(&#39;a =&gt; unit) =&gt; t(&#39;a) =&gt; unit;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let has: value:&#39;a =&gt; t(&#39;a) =&gt; bool;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let values: t(&#39;a) =&gt; Js.iterator(&#39;a);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>let entries: t(&#39;a) =&gt; Js.iterator((&#39;a, &#39;a));</span></span></code></pre></div>',15),n=[p];function l(o,c,d,h,g,u){return e(),s("div",null,n)}const b=a(i,[["render",l]]);export{v as __pageData,b as default};
