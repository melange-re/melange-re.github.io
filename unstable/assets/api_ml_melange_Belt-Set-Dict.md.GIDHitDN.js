import{_ as a,c as s,o as e,V as t}from"./chunks/framework.BCxdY_ip.js";const r=JSON.parse('{"title":"Module Set.Dict","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Belt-Set-Dict.md","filePath":"api/ml/melange/Belt-Set-Dict.md"}'),n={name:"api/ml/melange/Belt-Set-Dict.md"},p=t(`<h1 id="module-set-dict" tabindex="-1">Module <code>Set.Dict</code> <a class="header-anchor" href="#module-set-dict" aria-label="Permalink to &quot;Module \`Set.Dict\`&quot;">â€‹</a></h1><p>This module seprate identity from data, it is a bit more verboe but slightly more efficient due to the fact that there is no need to pack identity and data back after each operation</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;value, &#39;identity) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;value, &#39;id) cmp</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val empty : (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val fromArray : &#39;value array -&gt; cmp:(&#39;value, &#39;id) cmp -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val fromSortedArrayUnsafe : &#39;value array -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val isEmpty : (_, _) t -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val has : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; cmp:(&#39;value, &#39;id) cmp -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val add : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; cmp:(&#39;value, &#39;id) cmp -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><p><code>add s x</code> If <code>x</code> was already in <code>s</code>, <code>s</code> is returned unchanged.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val mergeMany : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  &#39;value array -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val remove : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  &#39;value -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t</span></span></code></pre></div><p><code>remove m x</code> If <code>x</code> was not in <code>m</code>, <code>m</code> is returned reference unchanged.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val removeMany : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  &#39;value array -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val union : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val intersect : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val diff : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val subset : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  bool</span></span></code></pre></div><p><code>subset s1 s2</code> tests whether the set <code>s1</code> is a subset of the set <code>s2</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val cmp : (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t -&gt; cmp:(&#39;value, &#39;id) cmp -&gt; int</span></span></code></pre></div><p>Total ordering between sets. Can be used as the ordering function for doing sets of sets.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val eq : (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t -&gt; cmp:(&#39;value, &#39;id) cmp -&gt; bool</span></span></code></pre></div><p><code>eq s1 s2</code> tests whether the sets <code>s1</code> and <code>s2</code> are equal, that is, contain equal elements.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEachU : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; unit) Js.Fn.arity1 -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEach : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; unit) -&gt; unit</span></span></code></pre></div><p><code>forEach s f</code> applies <code>f</code> in turn to all elements of <code>s</code>. In increasing order</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val reduceU : (&#39;value, &#39;id) t -&gt; &#39;a -&gt; (&#39;a -&gt; &#39;value -&gt; &#39;a) Js.Fn.arity2 -&gt; &#39;a</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val reduce : (&#39;value, &#39;id) t -&gt; &#39;a -&gt; (&#39;a -&gt; &#39;value -&gt; &#39;a) -&gt; &#39;a</span></span></code></pre></div><p>Iterate in increasing order.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val everyU : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) Js.Fn.arity1 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val every : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>every p s</code> checks if all elements of the set satisfy the predicate <code>p</code>. Order unspecified.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val someU : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) Js.Fn.arity1 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val some : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>some p s</code> checks if at least one element of the set satisfies the predicate <code>p</code>. Oder unspecified.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val keepU : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) Js.Fn.arity1 -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val keep : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><p><code>keep p s</code> returns the set of all elements in <code>s</code> that satisfy predicate <code>p</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val partitionU : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;value -&gt; bool) Js.Fn.arity1 -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t * (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val partition : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;value -&gt; bool) -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t * (&#39;value, &#39;id) t</span></span></code></pre></div><p><code>partition p s</code> returns a pair of sets <code>(s1, s2)</code>, where <code>s1</code> is the set of all the elements of <code>s</code> that satisfy the predicate <code>p</code>, and <code>s2</code> is the set of all the elements of <code>s</code> that do not satisfy <code>p</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val size : (&#39;value, &#39;id) t -&gt; int</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val toList : (&#39;value, &#39;id) t -&gt; &#39;value list</span></span></code></pre></div><p>In increasing order</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val toArray : (&#39;value, &#39;id) t -&gt; &#39;value array</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val minimum : (&#39;value, &#39;id) t -&gt; &#39;value option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val minUndefined : (&#39;value, &#39;id) t -&gt; &#39;value Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val maximum : (&#39;value, &#39;id) t -&gt; &#39;value option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val maxUndefined : (&#39;value, &#39;id) t -&gt; &#39;value Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val get : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; cmp:(&#39;value, &#39;id) cmp -&gt; &#39;value option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val getUndefined : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  &#39;value -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  &#39;value Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val getExn : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; cmp:(&#39;value, &#39;id) cmp -&gt; &#39;value</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val split : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  &#39;value -&gt;</span></span>
<span class="line"><span>  cmp:(&#39;value, &#39;id) cmp -&gt;</span></span>
<span class="line"><span>  ((&#39;value, &#39;id) t * (&#39;value, &#39;id) t) * bool</span></span></code></pre></div><p><code>split x s</code> returns a triple <code>(l, present, r)</code>, where <code>l</code> is the set of elements of <code>s</code> that are strictly less than <code>x</code>; <code>r</code> is the set of elements of <code>s</code> that are strictly greater than <code>x</code>; <code>present</code> is <code>false</code> if <code>s</code> contains no element equal to <code>x</code>, or <code>true</code> if <code>s</code> contains an element equal to <code>x</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val checkInvariantInternal : (_, _) t -&gt; unit</span></span></code></pre></div><p><strong>raise</strong> when invariant is not held</p>`,57),i=[p];function l(c,d,o,g,v,u){return e(),s("div",null,i)}const b=a(n,[["render",l]]);export{r as __pageData,b as default};
