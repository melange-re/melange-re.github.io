import{_ as e,c as a,o as s,V as t}from"./chunks/framework.BCxdY_ip.js";const v=JSON.parse('{"title":"Module Js.Typed_array","description":"","frontmatter":{},"headers":[],"relativePath":"api/re/melange/Js-Typed_array.md","filePath":"api/re/melange/Js-Typed_array.md"}'),p={name:"api/re/melange/Js-Typed_array.md"},i=t('<h1 id="module-js-typed-array" tabindex="-1">Module <code>Js.Typed_array</code> <a class="header-anchor" href="#module-js-typed-array" aria-label="Permalink to &quot;Module `Js.Typed_array`&quot;">â€‹</a></h1><p>Bindings to the functions in <code>TypedArray.prototype</code></p><p>JavaScript Typed Array API</p><p>see <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray</a> MDN</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module ArrayBuffer: { ... };</span></span></code></pre></div><p>The underlying buffer that the typed arrays provide views of</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Int8Array: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Uint8Array: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Uint8ClampedArray: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Int16Array: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Uint16Array: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Int32Array: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Uint32Array: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Float32Array: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Float64Array: { ... };</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module DataView: { ... };</span></span></code></pre></div><p>The DataView view provides a low-level interface for reading and writing multiple number types in an ArrayBuffer irrespective of the platform&#39;s endianness.</p>',17),n=[i];function l(o,d,r,c,h,u){return s(),a("div",null,n)}const y=e(p,[["render",l]]);export{v as __pageData,y as default};
