import{_ as a,c as e,o as s,V as t}from"./chunks/framework.BCxdY_ip.js";const v=JSON.parse('{"title":"Module Js.FormData","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Js-FormData.md","filePath":"api/ml/melange/Js-FormData.md"}'),n={name:"api/ml/melange/Js-FormData.md"},i=t(`<h1 id="module-js-formdata" tabindex="-1">Module <code>Js.FormData</code> <a class="header-anchor" href="#module-js-formdata" aria-label="Permalink to &quot;Module \`Js.FormData\`&quot;">â€‹</a></h1><p>Bindings to FormData</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type entryValue</span></span></code></pre></div><p>The values returned by the \`get<code>,All</code>\` and iteration functions is either a string or a Blob. Melange uses an abstract type and defers to users of the API to handle it according to their application needs.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val make : unit -&gt; t</span></span></code></pre></div><p><code>make ()</code> creates a new <code>FormData</code> object, initially empty.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val append : </span></span>
<span class="line"><span>  name:string -&gt;</span></span>
<span class="line"><span>  value:[ \`String of string | \`Object of &lt; .. &gt; Js.t | \`Dict of _ Js.dict ] -&gt;</span></span>
<span class="line"><span>  t -&gt;</span></span>
<span class="line"><span>  unit</span></span></code></pre></div><p><code>append t ~name ~value</code> appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val appendBlob : </span></span>
<span class="line"><span>  name:string -&gt;</span></span>
<span class="line"><span>  value:[ \`Blob of Js.blob | \`File of Js.file ] -&gt;</span></span>
<span class="line"><span>  ?filename:string -&gt;</span></span>
<span class="line"><span>  t -&gt;</span></span>
<span class="line"><span>  unit</span></span></code></pre></div><p><code>appendBlob t ~name ~value</code> appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist. This method differs from <code>append</code> in that instances in the Blob hierarchy can pass a third filename argument.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val delete : name:string -&gt; t -&gt; unit</span></span></code></pre></div><p><code>delete t ~name</code> deletes a key and its value(s) from a FormData object.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val get : name:string -&gt; t -&gt; entryValue option</span></span></code></pre></div><p><code>get t ~name</code> returns the first value associated with a given key from within a FormData object. If you expect multiple values and want all of them, use <a href="./#val-getAll"><code>getAll</code></a> instead.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val getAll : name:string -&gt; t -&gt; entryValue array</span></span></code></pre></div><p><code>getAll t ~name</code> returns all the values associated with a given key from within a FormData object.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val set : </span></span>
<span class="line"><span>  name:string -&gt;</span></span>
<span class="line"><span>  [ \`String of string | \`Object of &lt; .. &gt; Js.t | \`Dict of _ Js.dict ] -&gt;</span></span>
<span class="line"><span>  t -&gt;</span></span>
<span class="line"><span>  unit</span></span></code></pre></div><p><code>set t ~name ~value</code> sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val setBlob : </span></span>
<span class="line"><span>  name:string -&gt;</span></span>
<span class="line"><span>  [ \`Blob of Js.blob | \`File of Js.file ] -&gt;</span></span>
<span class="line"><span>  ?filename:string -&gt;</span></span>
<span class="line"><span>  t -&gt;</span></span>
<span class="line"><span>  unit</span></span></code></pre></div><p><code>setBlob t ~name ~value ?filename</code> sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist. This method differs from <code>set</code> in that instances in the Blob hierarchy can pass a third filename argument.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val has : name:string -&gt; t -&gt; bool</span></span></code></pre></div><p><code>has ~name t</code> returns whether a FormData object contains a certain key.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val keys : t -&gt; string Js.iterator</span></span></code></pre></div><p><code>keys t</code> returns an iterator which iterates through all keys contained in the FormData. The keys are strings.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val values : t -&gt; entryValue Js.iterator</span></span></code></pre></div><p><code>values t</code> returns an iterator which iterates through all values contained in the FormData. The values are strings or Blob objects.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val entries : t -&gt; (string * entryValue) Js.iterator</span></span></code></pre></div><p><code>entries t</code> returns an iterator which iterates through all key/value pairs contained in the FormData.</p>`,29),p=[i];function l(o,c,d,r,h,g){return s(),e("div",null,p)}const m=a(n,[["render",l]]);export{v as __pageData,m as default};
