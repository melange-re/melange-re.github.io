import{_ as a,c as s,o as t,V as e}from"./chunks/framework.BCxdY_ip.js";const v=JSON.parse('{"title":"Module Belt.MutableStack","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Belt-MutableStack.md","filePath":"api/ml/melange/Belt-MutableStack.md"}'),p={name:"api/ml/melange/Belt-MutableStack.md"},i=e('<h1 id="module-belt-mutablestack" tabindex="-1">Module <code>Belt.MutableStack</code> <a class="header-anchor" href="#module-belt-mutablestack" aria-label="Permalink to &quot;Module `Belt.MutableStack`&quot;">â€‹</a></h1><p><a href="#"><code>Belt.MutableStack</code></a></p><p>An FILO(first in last out) stack data structure</p><p>First in last out stack.</p><p>This module implements stacks, with in-place modification.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type &#39;a t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val make : unit -&gt; &#39;a t</span></span></code></pre></div><p>returns a new stack, initially empty.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val clear : &#39;a t -&gt; unit</span></span></code></pre></div><p>Discard all elements from the stack.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val copy : &#39;a t -&gt; &#39;a t</span></span></code></pre></div><p><code>copy x</code> O(1) operation, return a new stack</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val push : &#39;a t -&gt; &#39;a -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val popUndefined : &#39;a t -&gt; &#39;a Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val pop : &#39;a t -&gt; &#39;a option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val topUndefined : &#39;a t -&gt; &#39;a Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val top : &#39;a t -&gt; &#39;a option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val isEmpty : &#39;a t -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val size : &#39;a t -&gt; int</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEachU : &#39;a t -&gt; (&#39;a -&gt; unit) Js.Fn.arity1 -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEach : &#39;a t -&gt; (&#39;a -&gt; unit) -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val dynamicPopIterU : &#39;a t -&gt; (&#39;a -&gt; unit) Js.Fn.arity1 -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val dynamicPopIter : &#39;a t -&gt; (&#39;a -&gt; unit) -&gt; unit</span></span></code></pre></div><p><code>dynamicPopIter s f </code> apply <code>f</code> to each element of <code>s</code>. The item is poped before applying <code>f</code>, <code>s</code> will be empty after this opeartion. This function is useful for worklist algorithm</p>',24),n=[i];function l(c,o,d,h,u,g){return t(),s("div",null,n)}const b=a(p,[["render",l]]);export{v as __pageData,b as default};
