import{_ as a,c as s,o as e,V as t}from"./chunks/framework.BCxdY_ip.js";const v=JSON.parse('{"title":"Module Js.Promise","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Js-Promise.md","filePath":"api/ml/melange/Js-Promise.md"}'),n={name:"api/ml/melange/Js-Promise.md"},p=t(`<h1 id="module-js-promise" tabindex="-1">Module <code>Js.Promise</code> <a class="header-anchor" href="#module-js-promise" aria-label="Permalink to &quot;Module \`Js.Promise\`&quot;">â€‹</a></h1><p>Bindings to JS <code>Promise</code> functions</p><p>Specialized bindings to Promise. Note: For simplicity, this binding does not track the error type, it treat it as an opaque type</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type +&#39;a t = &#39;a Js.promise</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type error</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val make : </span></span>
<span class="line"><span>  (resolve:(&#39;a -&gt; unit) Js.Fn.arity1 -&gt;</span></span>
<span class="line"><span>    reject:(exn -&gt; unit) Js.Fn.arity1 -&gt;</span></span>
<span class="line"><span>    unit) -&gt;</span></span>
<span class="line"><span>  &#39;a t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val resolve : &#39;a -&gt; &#39;a t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val reject : exn -&gt; &#39;a t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val all : &#39;a t array -&gt; &#39;a array t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val all2 : (&#39;a0 t * &#39;a1 t) -&gt; (&#39;a0 * &#39;a1) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val all3 : (&#39;a0 t * &#39;a1 t * &#39;a2 t) -&gt; (&#39;a0 * &#39;a1 * &#39;a2) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val all4 : (&#39;a0 t * &#39;a1 t * &#39;a2 t * &#39;a3 t) -&gt; (&#39;a0 * &#39;a1 * &#39;a2 * &#39;a3) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val all5 : </span></span>
<span class="line"><span>  (&#39;a0 t * &#39;a1 t * &#39;a2 t * &#39;a3 t * &#39;a4 t) -&gt;</span></span>
<span class="line"><span>  (&#39;a0 * &#39;a1 * &#39;a2 * &#39;a3 * &#39;a4) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val all6 : </span></span>
<span class="line"><span>  (&#39;a0 t * &#39;a1 t * &#39;a2 t * &#39;a3 t * &#39;a4 t * &#39;a5 t) -&gt;</span></span>
<span class="line"><span>  (&#39;a0 * &#39;a1 * &#39;a2 * &#39;a3 * &#39;a4 * &#39;a5) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val race : &#39;a t array -&gt; &#39;a t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val then_ : (&#39;a -&gt; &#39;b t) -&gt; &#39;a t -&gt; &#39;b t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val catch : (error -&gt; &#39;a t) -&gt; &#39;a t -&gt; &#39;a t</span></span></code></pre></div>`,17),i=[p];function l(o,c,d,h,g,r){return e(),s("div",null,i)}const b=a(n,[["render",l]]);export{v as __pageData,b as default};
