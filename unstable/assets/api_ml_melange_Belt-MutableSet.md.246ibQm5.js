import{_ as a,c as e,o as s,V as t}from"./chunks/framework.BCxdY_ip.js";const r=JSON.parse('{"title":"Module Belt.MutableSet","description":"","frontmatter":{},"headers":[],"relativePath":"api/ml/melange/Belt-MutableSet.md","filePath":"api/ml/melange/Belt-MutableSet.md"}'),i={name:"api/ml/melange/Belt-MutableSet.md"},p=t(`<h1 id="module-belt-mutableset" tabindex="-1">Module <code>Belt.MutableSet</code> <a class="header-anchor" href="#module-belt-mutableset" aria-label="Permalink to &quot;Module \`Belt.MutableSet\`&quot;">â€‹</a></h1><p><a href="#"><code>Belt.MutableSet</code></a></p><p>The top level provides generic <strong>mutable</strong> set operations.</p><p>It also has two specialized inner modules <a href="./Belt-MutableSet-Int.html"><code>Belt.MutableSet.Int</code></a> and <a href="./Belt-MutableSet-String.html"><code>Belt.MutableSet.String</code></a></p><p>A <em>mutable</em> sorted set module which allows customize <em>compare</em> behavior.</p><p>Same as Belt.Set, but mutable.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module Int : sig ... end</span></span></code></pre></div><p>Specalized when key type is <code>int</code>, more efficient than the generic type</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module String : sig ... end</span></span></code></pre></div><p>Specalized when key type is <code>string</code>, more efficient than the generic type</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;k, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>type (&#39;k, &#39;id) id =</span></span>
<span class="line"><span>  (module Belt__.Belt_Id.Comparable</span></span>
<span class="line"><span>  with type identity = &#39;id</span></span>
<span class="line"><span>   and type t = &#39;k)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val make : id:(&#39;value, &#39;id) id -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val fromArray : &#39;k array -&gt; id:(&#39;k, &#39;id) id -&gt; (&#39;k, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val fromSortedArrayUnsafe : </span></span>
<span class="line"><span>  &#39;value array -&gt;</span></span>
<span class="line"><span>  id:(&#39;value, &#39;id) id -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val copy : (&#39;k, &#39;id) t -&gt; (&#39;k, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val isEmpty : (_, _) t -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val has : (&#39;value, _) t -&gt; &#39;value -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val add : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val addCheck : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val mergeMany : (&#39;value, &#39;id) t -&gt; &#39;value array -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val remove : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val removeCheck : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val removeMany : (&#39;value, &#39;id) t -&gt; &#39;value array -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val union : (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val intersect : (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val diff : (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val subset : (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val cmp : (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t -&gt; int</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val eq : (&#39;value, &#39;id) t -&gt; (&#39;value, &#39;id) t -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEachU : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; unit) Js.Fn.arity1 -&gt; unit</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val forEach : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; unit) -&gt; unit</span></span></code></pre></div><p><code>forEach m f</code> applies <code>f</code> in turn to all elements of <code>m</code>. In increasing order</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val reduceU : (&#39;value, &#39;id) t -&gt; &#39;a -&gt; (&#39;a -&gt; &#39;value -&gt; &#39;a) Js.Fn.arity2 -&gt; &#39;a</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val reduce : (&#39;value, &#39;id) t -&gt; &#39;a -&gt; (&#39;a -&gt; &#39;value -&gt; &#39;a) -&gt; &#39;a</span></span></code></pre></div><p>In increasing order.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val everyU : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) Js.Fn.arity1 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val every : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>every s p</code> checks if all elements of the set satisfy the predicate <code>p</code>. Order unspecified</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val someU : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) Js.Fn.arity1 -&gt; bool</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val some : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) -&gt; bool</span></span></code></pre></div><p><code>some p s</code> checks if at least one element of the set satisfies the predicate <code>p</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val keepU : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) Js.Fn.arity1 -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val keep : (&#39;value, &#39;id) t -&gt; (&#39;value -&gt; bool) -&gt; (&#39;value, &#39;id) t</span></span></code></pre></div><p><code>keep s p</code> returns the set of all elements in <code>s</code> that satisfy predicate <code>p</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val partitionU : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;value -&gt; bool) Js.Fn.arity1 -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t * (&#39;value, &#39;id) t</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val partition : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  (&#39;value -&gt; bool) -&gt;</span></span>
<span class="line"><span>  (&#39;value, &#39;id) t * (&#39;value, &#39;id) t</span></span></code></pre></div><p><code>partition p s</code> returns a pair of sets <code>(s1, s2)</code>, where <code>s1</code> is the set of all the elements of <code>s</code> that satisfy the predicate <code>p</code>, and <code>s2</code> is the set of all the elements of <code>s</code> that do not satisfy <code>p</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val size : (&#39;value, &#39;id) t -&gt; int</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val toList : (&#39;value, &#39;id) t -&gt; &#39;value list</span></span></code></pre></div><p>In increasing order</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val toArray : (&#39;value, &#39;id) t -&gt; &#39;value array</span></span></code></pre></div><p>In increasing order</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val minimum : (&#39;value, &#39;id) t -&gt; &#39;value option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val minUndefined : (&#39;value, &#39;id) t -&gt; &#39;value Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val maximum : (&#39;value, &#39;id) t -&gt; &#39;value option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val maxUndefined : (&#39;value, &#39;id) t -&gt; &#39;value Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val get : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; &#39;value option</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val getUndefined : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; &#39;value Js.undefined</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val getExn : (&#39;value, &#39;id) t -&gt; &#39;value -&gt; &#39;value</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val split : </span></span>
<span class="line"><span>  (&#39;value, &#39;id) t -&gt;</span></span>
<span class="line"><span>  &#39;value -&gt;</span></span>
<span class="line"><span>  ((&#39;value, &#39;id) t * (&#39;value, &#39;id) t) * bool</span></span></code></pre></div><p><code>split s x</code> returns a triple <code>((l, r), present)</code>, where <code>l</code> is the set of elements of <code>s</code> that are strictly less than <code>x</code>; <code>r</code> is the set of elements of <code>s</code> that are strictly greater than <code>x</code>; <code>present</code> is <code>false</code> if <code>s</code> contains no element equal to <code>x</code>, or <code>true</code> if <code>s</code> contains an element equal to <code>x</code>. <code>l,r</code> are freshly made, no sharing with <code>s</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>val checkInvariantInternal : (_, _) t -&gt; unit</span></span></code></pre></div><p><strong>raise</strong> when invariant is not held</p>`,64),l=[p];function n(o,d,c,g,h,u){return s(),e("div",null,l)}const b=a(i,[["render",n]]);export{r as __pageData,b as default};
